#!/bin/sh

project="clidesc"

usage() {
cat << EOF
usage: release [-h|-p|-M]

Bump minor version number and make a release on Github and pypi.

Options:

    -h        show this help message.
    -M        increase major version, instead of minor.
    -p        increase patch level version, instead of minor.

EOF
}

if [ "$#" -gt 1 ]
then
    usage
    exit 1
fi

if [ "$1" == "-h" ]
then
    usage
    exit 0
fi

dir=`dirname $0`
filename=`mktemp`

version_file="${dir}/../${project}/__init__.py"
version=`sed -n "s/__version__ = \"\([^\"]*\).*/\1/p" < "${version_file}"`

MAJOR=`echo "${version}" | cut -d. -f1`
MINOR=`echo "${version}" | cut -d. -f2`
PATCH=`echo "${version}" | cut -d. -f3`

if [ "$1" == "-M" ]
then
  MAJOR=$[$MAJOR + 1]
  MINOR=0
  PATCH=0
elif [ "$1" == "-p" ]
then
  PATCH=$[$PATCH + 1]
else
  MINOR=$[$MINOR + 1]
  PATCH=0
fi

# check python virtual environment
VENV=`echo "import sys; print('yes' if hasattr(sys, 'real_prefix') or sys.base_prefix != sys.prefix else 'no')" | python3`
USER="--user"
[ "${VENV}" == "yes" ] && USER=""

# install required packages
python3 -m pip install "$USER" -e "${dir}/..[release]"

# prepare release
release="${MAJOR}.${MINOR}.${PATCH}"
sed -i -e "/__version__/s/.*/__version__ = \"${release}\"/" "${version_file}"

# build
python3 setup.py sdist bdist_egg

cat <<EOF > "${filename}"
${project} release version ${release}
EOF

"${dir}/gittochangelog" >> "${filename}"

# Git release
git add "${dir}/../clidesc/__init__.py"
git commit -m "Bumped version for release ${release}."
git tag -a "v${release}" -eF "${filename}"

# Push to github
echo "Updating repository."
git push --tags origin main

# Push to pypi
python3 -m twine upload dist/${project}-${realease}*

# cleanup
rm "${filename}"
